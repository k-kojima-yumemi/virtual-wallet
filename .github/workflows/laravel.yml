name: Laravel

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
      - uses: actions/checkout@v4
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Generate key
        run: php artisan key:generate
      - name: Up
        run: docker compose up -d
      - name: Check containers
        run: docker compose ps
      - name: Test
        run: docker compose exec laravel.test php artisan test
      - name: Sail down
        if: always()
        run: docker compose down || true

  dusk:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      DB_DATABASE: dusk_test_db
      DB_USERNAME: root
      DB_PASSWORD: root
      SESSION_DRIVER: array
      CACHE_DRIVER: array
    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
      - uses: actions/checkout@v4
      - run: sudo systemctl start mysql.service
      - run: mysql --user="root" --password="root" -e "CREATE DATABASE ${{ env.DB_DATABASE }};"
      - name: Copy .env
        run: cp ".env.dusk.testing" ".env"
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Upgrade Chrome Driver
        run: php artisan dusk:chrome-driver --detect
      - run: php artisan key:generate
      - name: Start Chrome Driver
        run: ./vendor/laravel/dusk/bin/chromedriver-linux &
      - name: Run Laravel Server
        run: php artisan serve --no-reload --host=localhost --port=8000 &
      - name: Migrate
        run: php artisan migrate --env=dusk.testing
      - name: Run test
        run: php artisan dusk --testdox --colors=always
        env:
          APP_URL: 'http://localhost:8000'
      - name: Upload Screenshots
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: virtual-wallet-screenshots-${{ github.run_number }}
          path: tests/Browser/screenshots
          if-no-files-found: ignore
